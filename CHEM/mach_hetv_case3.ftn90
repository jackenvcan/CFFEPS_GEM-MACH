!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------

!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : mach_hetv_case3.ftn90
! Creation       : P. Makar, V. Bouchet, A. Nenes, S. Gravel, B. Pabla, S. Menard
! Description    : Heterogeneous chemistry solver for case4.  Based on algorithm's
!                  in Nenes et al's ISORROPIA solver, recoded to vectorize over the
!                  gridpoint dimension.  All input arrays are of length npts (total
!                  number of gridpoints submitted from the calling code.  The
!                  subsection of each 1-D array between index ns3 and ne3 (inclusive)
!                  has been pre-sorted, and contains the gridpoint data that must
!                  be solved using case 4's algorithm.  Operations within this
!                  subroutine therefore take place over array bounds from ns3 to ne3.
!
!                  Units on input are molality; moles/kg H2O.
! Extra info     :
!                  Athanasios Nenes, Mail Code 210-41, Dept. of Chemical Engineering,
!                  California Institute of Technology, Pasadena, Ca., 91125, USA
!                  nenes@its.caltech.edu
!
!                 The conditions for which this case is called are as follows
!                     1.0 <= tats <  1.5, rh <  mdrh_leto_ambis
!                  The reactions representing this case are as follows(bracketed numbers
!                  indicate that the solution is done in stages, as numbered):
!                     None; solid phase only
!                  The system of equations to be solved in this case are as follows:
!                     TA = NH4HSO4 + 3 (NH4)3H(SO4)2,
!                     TS = NH4HSO4 + 2 (NH4)3H(SO4)2
!                  The solution to the system of equations:
!                  (NH4)3H(SO4)2 = TA - TS
!                    NH4HSO4 = 3 TS - 2 TA.
!
! Arguments  IN
!
!            OUT
!
!=============================================================================
!
!!if_on
subroutine mach_hetv_case3 (npts, ns3, ne3, so4, no3, nh4, hso4, hno3, h, nh3, amsul, ambis, amnit, leto, lwn, ta, ts, tn)
!!if_off
   implicit none
!!if_on
   integer(kind=4), intent  (in) :: npts
   integer(kind=4), intent  (in) :: ns3
   integer(kind=4), intent  (in) :: ne3
   real(kind=8),    intent  (in) :: ta   (npts)
   real(kind=8),    intent  (in) :: ts   (npts)
   real(kind=8),    intent  (in) :: tn   (npts)
   real(kind=8),    intent (out) :: so4  (npts)
   real(kind=8),    intent (out) :: no3  (npts)
   real(kind=8),    intent (out) :: nh4  (npts)
   real(kind=8),    intent (out) :: hso4 (npts)
   real(kind=8),    intent (out) :: hno3 (npts)
   real(kind=8),    intent (out) :: h    (npts)
   real(kind=8),    intent (out) :: nh3  (npts)
   real(kind=8),    intent (out) :: amsul(npts)
   real(kind=8),    intent (out) :: ambis(npts)
   real(kind=8),    intent (out) :: amnit(npts)
   real(kind=8),    intent (out) :: leto (npts)
   real(kind=8),    intent (out) :: lwn  (npts)
!!if_off
!
!  Local variables:
!
   integer(kind=4)  :: i
!
!   Dry particle, with letovicite and ammonium bisulphate being the only solids possible.  Solve the system of
!   two equations in two unknowns, place all nitrate into HNO3, zero the remaining terms, and exit.
!
   do i = ns3, ne3
      ambis(i) = max(3.0d0 * ts(i) - 2.0d0 * ta(i), 0.D0)
      leto(i)  = max(ta(i) - ts(i), 0.D0)
      amsul(i) = 0.0d0
      hno3(i)  = tn(i)
      nh3(i)   = 0.0d0
      so4(i)   = 0.0d0
      hso4(i)  = 0.0d0
      no3(i)   = 0.0d0
      h(i)     = 0.0d0
      nh4(i)   = 0.0d0
      amnit(i) = 0.0d0
      lwn(i)   = 0.0d0
   end do

   return
end subroutine mach_hetv_case3
