!begin trap head
!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------

!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : mach_cam_headers_mod.ftn90
! Creation       : S. Menard July 2008
! Description    : Modules defining explicit interfaces for mach_cam* subroutines
!
! Extra info     :
!
!============================================================================

module mach_cam_headers_mod
   interface
!end trap head

subroutine gocart_so2so4(busdyn, busdyn_size, metvar3d)
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use chm_metvar_mod,     only: SIZE_MV3D
   integer(kind=4), intent   (in) :: busdyn_size
   real   (kind=4), intent(inout) :: busdyn  (busdyn_size)
   real   (kind=4), intent   (in) :: metvar3d(chm_ni, chm_nk, SIZE_MV3D)
end subroutine gocart_so2so4

subroutine mach_cam_aeroact (il1, il2, RADCLD, TOTNUM, rhsize, ntr, rhop, wrow, XROW, &
                             RCRIT, aeronum, zmlwc, roarow, CLSIZE, kount, jlat       )
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4), intent (in) :: ntr
   integer(kind=4), intent (in) :: il1
   integer(kind=4), intent (in) :: il2
   integer(kind=4), intent (in) :: kount
   integer(kind=4), intent (in) :: jlat
   real(kind=4),    intent(out) :: radcld (chm_ni,chm_nk)
   real(kind=4),    intent(out) :: totnum (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: rhsize (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: rhop   (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: wrow   (chm_ni,chm_nk)
   real(kind=4),    intent(out) :: xrow   (chm_ni,chm_nk+1,ntr)
   real(kind=4),    intent(out) :: rcrit  (chm_ni,chm_nk)
   real(kind=4),    intent (in) :: aeronum(chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: zmlwc  (chm_ni,chm_nk,2)
   real(kind=4),    intent (in) :: roarow (chm_ni,chm_nk)
   real(kind=4),    intent(out) :: clsize (chm_ni,chm_nk,isize)
end subroutine mach_cam_aeroact

subroutine mach_cam_aerocld (throw, XROW, lev, il1, il2, rhsize, rhop, AERONUM, ntr, nbnd, &
                             thlev, roarow, pres, zmlwc, wrow, jlat, RCRITS, Q_BIN,        &
                             aerosize, tcldcv, CLD_CHM, adt2, FLUX, WETFLX, fctr,          &
                             frevp, TS2, TS4, CLTS, CLS4, rhrow, kount,                    &
                             chm_hetchem_s, chm_aqueous_s                                  )
   use chm_ptopo_grid_mod,      only: chm_ni, chm_nk
   use chm_utils_mod,           only: NMLKEY_LEN
   use mach_cam_utils_mod,      only: isize
   use mach_cam_pre_mod,        only: nswdep
   integer(kind=4),           intent   (in) :: ntr
   integer(kind=4),           intent   (in) :: nbnd
   integer(kind=4),           intent   (in) :: lev
   integer(kind=4),           intent   (in) :: il1
   integer(kind=4),           intent   (in) :: il2
   integer(kind=4),           intent   (in) :: jlat
   real(kind=4),              intent   (in) :: adt2
   integer(kind=4),           intent   (in) :: kount
   character(len=NMLKEY_LEN), intent   (in) :: chm_hetchem_s
   character(len=NMLKEY_LEN), intent   (in) :: chm_aqueous_s
   real(kind=4),              intent   (in) :: throw   (chm_ni,lev)
   real(kind=4),              intent  (out) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),              intent   (in) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),              intent   (in) :: rhop    (chm_ni,chm_nk,isize)
   real(kind=4),              intent(inout) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),              intent   (in) :: thlev   (chm_ni,chm_nk)
   real(kind=4),              intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),              intent   (in) :: pres    (chm_ni,chm_nk)
   real(kind=4),              intent   (in) :: zmlwc   (chm_ni,chm_nk,2)
   real(kind=4),              intent   (in) :: wrow    (chm_ni,chm_nk)
   real(kind=4),              intent  (out) :: rcrits  (chm_ni,chm_nk)
   real(kind=4),              intent  (out) :: q_bin   (chm_ni,chm_nk,isize)
   real(kind=4),              intent   (in) :: aerosize(2,isize)
   real(kind=4),              intent   (in) :: tcldcv  (chm_ni,chm_nk)
   real(kind=4),              intent  (out) :: cld_chm (chm_ni,chm_nk,7)
   real(kind=4),              intent  (out) :: flux    (chm_ni,nswdep,chm_nk,2)
   real(kind=4),              intent  (out) :: wetflx  (chm_ni,nswdep)
   real(kind=4),              intent   (in) :: fctr    (chm_ni,chm_nk)
   real(kind=4),              intent   (in) :: frevp   (chm_ni,chm_nk)
   real(kind=4),              intent  (out) :: ts2     (chm_ni,chm_nk,3,2)
   real(kind=4),              intent  (out) :: ts4     (chm_ni,chm_nk,3,2)
   real(kind=4),              intent  (out) :: clts    (chm_ni,4,2)
   real(kind=4),              intent  (out) :: cls4    (chm_ni,4,2)
   real(kind=4),              intent   (in) :: rhrow   (chm_ni,lev)
end subroutine mach_cam_aerocld

subroutine mach_cam_aeroprop( ntr, il1, il2, RHSIZE, aerosize, RHOP,     &
                              rhrow, throw, rgrid, AERONUM, TOTMAS,      &
                              TRWTROW, roarow, shj, pressg, PDIFF, PDEPV )
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4),  intent (in) :: ntr
   integer(kind=4),  intent (in) :: il1
   integer(kind=4),  intent (in) :: il2
   real(kind=4),     intent(out) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),     intent (in) :: aerosize(2,isize)
   real(kind=4),     intent(out) :: rhop    (chm_ni,chm_nk,isize)
   real(kind=4),     intent (in) :: rhrow   (chm_ni,chm_nk+1)
   real(kind=4),     intent (in) :: throw   (chm_ni,chm_nk+1)
   real(kind=4),     intent (in) :: rgrid   (chm_ni,chm_nk,ntr)
   real(kind=4),     intent(out) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),     intent(out) :: totmas  (chm_ni,chm_nk,isize)
   real(kind=4),     intent(out) :: trwtrow (chm_ni,chm_nk,isize)
   real(kind=4),     intent (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),     intent (in) :: shj     (chm_ni,chm_nk)
   real(kind=4),     intent (in) :: pressg  (chm_ni)
   real(kind=4),     intent(out) :: pdiff   (chm_ni,chm_nk,isize)
   real(kind=4),     intent(out) :: pdepv   (chm_ni,chm_nk,isize)
end subroutine mach_cam_aeroprop

subroutine mach_cam_cas (t, COLEF, RSCAVG, rhop, roarow, rhsize, pressg, qr, &
                         lev, il1, il2, VPR, pdiff, pdepv, shj               )
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   integer(kind=4), intent (in) :: lev
   integer(kind=4), intent (in) :: il1
   integer(kind=4), intent (in) :: il2
   real(kind=4),    intent (in) :: t     (chm_ni,lev)
   real(kind=4),    intent(out) :: colef (chm_ni,chm_nk,isize)
   real(kind=4),    intent(out) :: rscavg(chm_ni,chm_nk,4) !  scavenging rate (by falling rain drops) for h2o2, rooh, hno3, nh3
   real(kind=4),    intent (in) :: rhop  (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: roarow(chm_ni,chm_nk)
   real(kind=4),    intent (in) :: rhsize(chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: pressg(chm_ni)
   real(kind=4),    intent (in) :: qr    (chm_ni,chm_nk)
   real(kind=4),    intent(out) :: vpr   (chm_ni,chm_nk)
   real(kind=4),    intent (in) :: pdiff (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: pdepv (chm_ni,chm_nk,isize)
   real(kind=4),    intent (in) :: shj   (chm_ni,chm_nk)
end subroutine mach_cam_cas

subroutine mach_cam_coagd (il1, il2, throw, roarow, RTCOA, rhsize,                   &
                           TOTMAS, AERONUM, ntr, f, kount, adt2,                 &
                           irest, XROW, v, jlat, icob, tmin, pdepv, pdiff, mae, igf, igfij, &
                           rhop, aerosize                                                   )
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: kount
   integer(kind=4), intent   (in) :: irest
   integer(kind=4), intent   (in) :: jlat
   integer(kind=4), intent   (in) :: icob
   real(kind=4),    intent   (in) :: tmin
   real(kind=4),    intent   (in) :: adt2
   integer(kind=4), intent   (in) :: mae
   real(kind=4),    intent   (in) :: throw   (chm_ni,chm_nk+1)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent  (out) :: rtcoa   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),    intent(inout) :: totmas  (chm_ni,chm_nk,isize)
   real(kind=4),    intent(inout) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: f       (isize,isize,isize)
   real(kind=4),    intent(inout) :: xrow    (chm_ni,chm_nk+1,ntr)
   real(kind=4),    intent   (in) :: v       (isize)
   real(kind=4),    intent   (in) :: pdepv   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: pdiff   (chm_ni,chm_nk,isize)
   integer(kind=4), intent   (in) :: igf     (isize)
   integer(kind=4), intent   (in) :: igfij   (isize,isize*isize,2)
   real(kind=4),    intent   (in) :: rhop    (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
end subroutine mach_cam_coagd

subroutine mach_cam_condsoa (lev, il1, il2, RGRID, aeronum, XROW,      &
                             ntr, nbnd, roarow, nn, jlat, delt,        &
                             RTCOND, pvol, pcond, soa, pressg, t, shj, &
                             aerosize)
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: nn
   integer(kind=4), intent   (in) :: jlat
   real(kind=4),    intent   (in) :: delt
   real(kind=4),    intent  (out) :: rgrid   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),    intent(inout) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent  (out) :: rtcond  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: pvol    (isize)
   real(kind=4),    intent   (in) :: pcond   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: soa     (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pressg  (chm_ni)
   real(kind=4),    intent   (in) :: t       (chm_ni,lev)
   real(kind=4),    intent   (in) :: shj     (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
end subroutine mach_cam_condsoa

   subroutine mach_cam_drydepo (lev, il1, il2, seasn, ra, usi, throw,             &
                                ntr, adt2, pressg, tmin, thlev, roarow, rhsize,   &
                                fland, XROW, PDEPV, RTDRY, dshj, GDREM, pdiff,    &
                                luc, ns, DRYFLX, aerosize            )
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   use mach_cam_pre_mod,     only: icom
   integer(kind=4), intent   (in) :: ns
   integer(kind=4), intent   (in) :: luc
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent   (in) :: tmin
   real(kind=4),    intent   (in) :: seasn   (chm_ni)
   real(kind=4),    intent   (in) :: ra      (chm_ni,luc)
   real(kind=4),    intent   (in) :: usi     (chm_ni,luc)
   real(kind=4),    intent   (in) :: throw   (chm_ni,lev)
   real(kind=4),    intent   (in) :: pressg  (chm_ni)
   real(kind=4),    intent   (in) :: thlev   (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: fland   (chm_ni,luc)
   real(kind=4),    intent(inout) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent(inout) :: pdepv   (chm_ni,chm_nk,isize)
   real(kind=4),    intent  (out) :: rtdry   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: dshj    (chm_ni,chm_nk)
   real(kind=4),    intent(inout) :: gdrem   (chm_ni,ntr,3)
   real(kind=4),    intent   (in) :: pdiff   (chm_ni,chm_nk,isize)
   real(kind=4),    intent  (out) :: dryflx  (chm_ni,icom)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
end subroutine mach_cam_drydepo

subroutine mach_cam_drypar (lev, il1, il2, ntr, adt2, luc, ns,          &
                            throw, thlev, roarow, pdiff, rhsize, fland, &
                            xrow, Pdepv, RTDRY, seasn, ra, usi,         &
                            aerosize, sub_xrow, sub_r, nbnd, ntr_n      )
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4), intent   (in) :: ntr_n
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: ns
   integer(kind=4), intent   (in) :: luc
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent   (in) :: throw   (chm_ni,lev)
   real(kind=4),    intent   (in) :: thlev   (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pdiff   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: fland   (chm_ni,luc)
   real(kind=4),    intent   (in) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent(inout) :: pdepv   (chm_ni,chm_nk,isize)
   real(kind=4),    intent  (out) :: rtdry   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: seasn   (chm_ni)
   real(kind=4),    intent   (in) :: ra      (chm_ni,luc)
   real(kind=4),    intent   (in) :: usi     (chm_ni,luc)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
   real(kind=4),    intent   (in) :: sub_xrow(chm_ni,lev,ntr_n) !SLG Sub V
   real(kind=4),    intent   (in) :: sub_r   (nbnd)             !SLG Sub V
end subroutine mach_cam_drypar

subroutine mach_cam_flux(busper, busvol, busper_size, busvol_size, metvar2d, metvar3d      )
   use chm_metvar_mod,        only: SIZE_MV2D, SIZE_MV3D
   use chm_ptopo_grid_mod,    only: chm_ni, chm_nk
   integer(kind=4), intent   (in) :: busvol_size
   integer(kind=4), intent   (in) :: busper_size
   real(kind=4),    intent(inout) :: busper  (busper_size)
   real(kind=4),    intent(inout) :: busvol  (busvol_size)
   real(kind=4),    intent   (in) :: metvar2d(chm_ni,SIZE_MV2D)
   real(kind=4),    intent   (in) :: metvar3d(chm_ni,chm_nk,SIZE_MV3D)
end subroutine mach_cam_flux

   subroutine mach_cam_intrsec_inner (lev, il1, il2, XROW, ntr,            &
                                nn, adt2, nbnd, rtcond, aeronum, v, mae)
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: nn
   integer(kind=4), intent   (in) :: mae
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent(inout) :: xrow   (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: rtcond (chm_ni,chm_nk,nbnd)
   real(kind=4),    intent   (in) :: aeronum(chm_ni,chm_nk,nbnd)
   real(kind=4),    intent   (in) :: v      (nbnd)
end subroutine mach_cam_intrsec_inner

   subroutine mach_cam_intrsec_outer (lev, il1, il2, XROW, RGRID, ntr, nbnd, &
                                nn, adt2, rtcond, aeronum, v, mae, pressg,  &
                                t, shj, roarow, aerosize                    )
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: mae
   integer(kind=4), intent   (in) :: nn
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent(inout) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent  (out) :: rgrid   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: rtcond  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: v       (isize)
   real(kind=4),    intent   (in) :: pressg  (chm_ni)
   real(kind=4),    intent   (in) :: t       (chm_ni,lev)
   real(kind=4),    intent   (in) :: shj     (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
end subroutine mach_cam_intrsec_outer

subroutine mach_cam_intrsec1_inner(lev, il1, il2, XROW, ntr, ntp, isize, &
                              daqchm, aeronum, rmass                     )
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   integer(kind=4),  intent   (in) :: isize
   integer(kind=4),  intent   (in) :: ntr
   integer(kind=4),  intent   (in) :: lev
   integer(kind=4),  intent   (in) :: il1
   integer(kind=4),  intent   (in) :: il2
   integer(kind=4),  intent   (in) :: ntp
   real(kind=4),     intent(inout) :: xrow   (chm_ni,lev,ntr)
   real(kind=4),     intent   (in) :: daqchm (chm_ni,chm_nk,isize)
   real(kind=4),     intent   (in) :: aeronum(chm_ni,chm_nk,isize)
   real(kind=4),     intent   (in) :: rmass  (chm_ni,chm_nk,isize)
end subroutine mach_cam_intrsec1_inner

   subroutine mach_cam_intrsec1_outer (lev, il1, il2, XROW, ntr, nbnd, rhopd, &
                                       daqchm, aeronum, aerosize, q_bin, rcrit, iswitch)
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: iswitch
   real(kind=4),    intent(inout) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: rhopd   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: daqchm  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
   real(kind=4),    intent   (in) :: q_bin   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: rcrit   (chm_ni,chm_nk)
end subroutine mach_cam_intrsec1_outer

subroutine mach_cam_main (lev, il1, il2, jlat, throw, rhrow, lon, XROW,     &
                          pressg, shj, it, ITR, wrow, irest, ntr, kount,    &
                          luc, aerosize, ohrow, no3row, cldcv, zmlwc, qr,   &
                          TRWTROW, pres, roarow, thlev, dshj, rtso2, fland, &
                          RTNUCL, coagfr, pvol, tmin, ns, soa, seasn, ra,   &
                          usi, igf, CONDNU, igfij, TCLDCV, CLD_CHM, fctr,   &
                          frevp, wetflx, TS2, TS4, CLTS, CLS4, DRYFLX)
   use chm_ptopo_grid_mod,      only: chm_ni, chm_nk
   use mach_cam_utils_mod,      only: isize
   use mach_cam_pre_mod,        only: nswdep, icom
   integer(kind=4),   intent   (in)                                   :: lev, il1, il2, jlat, it
   integer(kind=4),   intent   (in)                                   :: ntr, luc, lon, ns
   integer(kind=4),   intent   (in)                                   :: irest, kount
   integer(kind=4),   intent(inout)                                   :: itr
   integer(kind=4),   intent   (in)                                   :: igf(isize)
   integer(kind=4),   intent   (in)                                   :: igfij(isize, isize * isize, 2)
   real(kind=4),      intent(inout)                                   :: condnu(15)
   real(kind=4),      intent   (in)                                   :: tmin
   real(kind=4),      intent   (in), dimension(chm_ni, lev)           :: throw, rhrow
   real(kind=4),      intent   (in), dimension(chm_ni, chm_nk)        :: shj, dshj, wrow
   real(kind=4),      intent   (in), dimension(chm_ni, chm_nk)        :: soa, roarow, pres, thlev
   real(kind=4),      intent   (in), dimension(chm_ni, chm_nk)        :: fctr, frevp
   real(kind=4),      intent   (in), dimension(chm_ni)                :: pressg, seasn
   real(kind=4),      intent   (in), dimension(chm_ni, chm_nk, 2)     :: cldcv, zmlwc, qr, rtso2
   real(kind=4),      intent   (in), dimension(2, isize)              :: aerosize
   real(kind=4),      intent   (in), dimension(isize)                 :: pvol
   real(kind=4),      intent   (in), dimension(isize, isize, isize)   :: coagfr
   real(kind=4),      intent   (in), dimension(chm_ni, luc)           :: ra, usi, fland
   real(kind=4),      intent   (in), dimension(chm_ni, chm_nk)        :: ohrow, no3row
   real(kind=4),      intent  (out), dimension(chm_ni, chm_nk)        :: rtnucl
   real(kind=4),      intent  (out), dimension(chm_ni, chm_nk, isize) :: trwtrow
   real(kind=4),      intent  (out), dimension(chm_ni, chm_nk, 7)     :: cld_chm
   real(kind=4),      intent  (out), dimension(chm_ni, nswdep)        :: wetflx
   real(kind=4),      intent  (out), dimension(chm_ni, chm_nk, 3, 2)  :: ts2, ts4
   real(kind=4),      intent  (out), dimension(chm_ni, 4, 2)          :: clts, cls4
   real(kind=4),      intent  (out), dimension(chm_ni, icom)          :: dryflx
   real(kind=4),      intent(inout), dimension(chm_ni, chm_nk)        :: tcldcv
   real(kind=4),      intent(inout), dimension(chm_ni, lev, ntr)      :: xrow
end subroutine mach_cam_main

subroutine mach_cam_pre(AEROSIZE1, PVOL, IGF, IGFIJ, COAGFR, IAER_SP)
   use mach_cam_utils_mod, only: isize
   use mach_cam_pre_mod,   only: icom
   real(kind=4),    intent(out) :: aerosize1(2,isize)
   real(kind=4),    intent(out) :: pvol     (isize)
   integer(kind=4), intent(out) :: igf      (isize)
   integer(kind=4), intent(out) :: igfij    (isize,isize*isize,2)
   real(kind=4),    intent(out) :: coagfr   (isize,isize,isize)
   integer(kind=4), intent(out) :: iaer_sp  (icom,isize)
end subroutine mach_cam_pre

subroutine mach_cam_rain (t, QR, rhsize, pdepv, pressg, shj, roarow, pdiff,     &
                          XROW, RTBCLD, rhop, cf, cc2d, ntr, lev, il1, il2, adt2)
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent   (in) :: t     (chm_ni,lev)
   real(kind=4),    intent(inout) :: qr    (chm_ni,chm_nk,2)
   real(kind=4),    intent   (in) :: rhsize(chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: pdepv (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: pressg(chm_ni)
   real(kind=4),    intent   (in) :: shj   (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: roarow(chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pdiff (chm_ni,chm_nk,isize)
   real(kind=4),    intent(inout) :: xrow  (chm_ni,lev,ntr)
   real(kind=4),    intent(inout) :: rtbcld(chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: rhop  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: cf    (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: cc2d  (chm_ni,chm_nk)
end subroutine mach_cam_rain

subroutine mach_cam_scaveng (throw, XROW, cf, evpfac, lev, il1, il2, shj, pressg, pdepv,  &
                             qr, RTBCLD, rhsize, rhop, dshj, pdiff, tmin, ntr, thlev,     &
                             adt2, GDREM, roarow, WETFLX, FLUX, jlat, TS2, TS4, CLTS, CLS4)
   use chm_ptopo_grid_mod,      only: chm_ni, chm_nk
   use mach_cam_utils_mod,      only: isize
   use mach_cam_pre_mod,        only: nswdep
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: jlat
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent   (in) :: tmin
   real(kind=4),    intent   (in) :: throw    (chm_ni,lev)
   real(kind=4),    intent(inout) :: xrow     (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: cf       (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: evpfac   (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: shj      (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pressg   (chm_ni)
   real(kind=4),    intent   (in) :: pdepv    (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: qr       (chm_ni,chm_nk,2)
   real(kind=4),    intent(inout) :: rtbcld   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: rhsize   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: rhop     (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: dshj     (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pdiff    (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: thlev    (chm_ni,chm_nk)
   real(kind=4),    intent(inout) :: gdrem    (chm_ni,ntr,3)
   real(kind=4),    intent   (in) :: roarow   (chm_ni,chm_nk)
   real(kind=4),    intent(inout) :: wetflx   (chm_ni,nswdep)
   real(kind=4),    intent(inout) :: flux     (chm_ni,nswdep,chm_nk,2)
   real(kind=4),    intent  (out) :: ts2      (chm_ni,chm_nk,3,2)
   real(kind=4),    intent  (out) :: ts4      (chm_ni,chm_nk,3,2)
   real(kind=4),    intent  (out) :: clts     (chm_ni,4,2)
   real(kind=4),    intent(inout) :: cls4     (chm_ni,4,2)
end subroutine mach_cam_scaveng

subroutine mach_cam_sfss (TRAC, dshj, lev, t, ntr, nn,                 &
                          aerosize, surfwd, rsfrow, pressg, gc, fland, &
                          il1, il2, iae1, flux_L                       )
   use chm_ptopo_grid_mod,    only: chm_ni, chm_nk
   use mach_cam_utils_mod,    only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: nn
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: iae1
   logical(kind=4), intent   (in) :: flux_l
   real(kind=4),    intent(inout) :: trac    (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: dshj    (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: t       (chm_ni,lev)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
   real(kind=4),    intent   (in) :: surfwd  (chm_ni)
   real(kind=4),    intent  (out) :: rsfrow  (chm_ni,isize)
   real(kind=4),    intent   (in) :: pressg  (chm_ni)
   real(kind=4),    intent   (in) :: gc      (chm_ni)
   real(kind=4),    intent   (in) :: fland   (chm_ni,15)
end subroutine mach_cam_sfss

subroutine mach_cam_sulfate (lev, il1, il2, RGRID,                           &
                             aeronum, XROW, ntr, nbnd, roarow, pressg, t, rh, shj, &
                             ohrow, no3row, nn, rhsize, aerosize,            &
                             delt, RTNUCL, RTCOND, rtso2,             &
                             cldcv, pvol, tmin, PCOND, mae, condnu)
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use mach_cam_utils_mod,   only: isize
   integer(kind=4), intent   (in) :: nn
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nbnd
   integer(kind=4), intent   (in) :: lev
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   integer(kind=4), intent   (in) :: mae
   real(kind=4),    intent   (in) :: delt
   real(kind=4),    intent   (in) :: tmin
   real(kind=4),    intent  (out) :: rgrid   (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: aeronum (chm_ni,chm_nk,isize)
   real(kind=4),    intent(inout) :: xrow    (chm_ni,lev,ntr)
   real(kind=4),    intent   (in) :: roarow  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pressg  (chm_ni)
   real(kind=4),    intent   (in) :: t       (chm_ni,lev)
   real(kind=4),    intent   (in) :: rh      (chm_ni,lev)
   real(kind=4),    intent   (in) :: shj     (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: ohrow   (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: no3row  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: rhsize  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: aerosize(2,isize)
   real(kind=4),    intent  (out) :: rtnucl  (chm_ni,chm_nk)
   real(kind=4),    intent  (out) :: rtcond  (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: rtso2   (chm_ni,chm_nk,2)
   real(kind=4),    intent   (in) :: cldcv   (chm_ni,chm_nk,2)
   real(kind=4),    intent   (in) :: pvol    (isize)
   real(kind=4),    intent  (out) :: pcond   (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: condnu  (15)
end subroutine mach_cam_sulfate

subroutine mach_cam_tenddist (RTALL, pdepv, adt2, thlev, nrem, il1, il2,  &
                              ntr, dshj, pressg, GDREM)
   use chm_ptopo_grid_mod, only: chm_ni, chm_nk
   use mach_cam_utils_mod, only: isize
   integer(kind=4), intent   (in) :: ntr
   integer(kind=4), intent   (in) :: nrem
   integer(kind=4), intent   (in) :: il1
   integer(kind=4), intent   (in) :: il2
   real(kind=4),    intent   (in) :: adt2
   real(kind=4),    intent(inout) :: rtall (chm_ni,chm_nk,ntr)
   real(kind=4),    intent   (in) :: pdepv (chm_ni,chm_nk,isize)
   real(kind=4),    intent   (in) :: thlev (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: dshj  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: pressg(chm_ni)
   real(kind=4),    intent(inout) :: gdrem (chm_ni,ntr,3)
end subroutine mach_cam_tenddist

subroutine mach_pm_chem(busdyn, busvol, busper, busdyn_size, busvol_size, busper_size, &
                        f_step, f_j, oldso4, metvar2d, metvar3d)
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
   use chm_metvar_mod,       only: SIZE_MV2D, SIZE_MV3D
   integer(kind=4), intent   (in) :: busper_size
   integer(kind=4), intent   (in) :: busvol_size
   integer(kind=4), intent   (in) :: busdyn_size
   integer(kind=4), intent   (in) :: f_step
   integer(kind=4), intent   (in) :: f_j
   real(kind=4),    intent(inout) :: busdyn  (busdyn_size)
   real(kind=4),    intent   (in) :: busvol  (busvol_size)
   real(kind=4),    intent(inout) :: busper  (busper_size)
   real(kind=4),    intent   (in) :: oldso4  (chm_ni,chm_nk)
   real(kind=4),    intent   (in) :: metvar2d(chm_ni,SIZE_MV2D)
   real(kind=4),    intent   (in) :: metvar3d(chm_ni,chm_nk,SIZE_MV3D)
end subroutine mach_pm_chem

end interface
end module mach_cam_headers_mod
