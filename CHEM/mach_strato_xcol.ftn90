!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------
!!if_on
subroutine mach_strato_xcol( x_vmr, p_low, p_up, x_col)
!!if_off
!-----------------------------------------------------------------------
! Calculate overhead columns *at* levels:  cst_x * SUM( vmr * delta_p ) 
! where delta_p is between levels and vmr are at mid-levels
!-----------------------------------------------------------------------
!
      use chm_consphychm_mod, only: grav, avno, mwt_air
      use chm_species_info_mod
      use chm_species_idx_mod
      use chm_utils_mod  
!
      implicit none
!
! Declare Subroutine arguments
!
!-----------------------------------------------------------------------
!  input x_vmr : concentration in mole/mole vmr
! output x_col : overhead column (molec /cm2) for current level
!-----------------------------------------------------------------------
!!if_on
  real(kind=4), intent   (in) :: x_vmr                      ! mole/mole vmr 
  real(kind=4), intent   (in) :: p_low, p_up                ! pressure (Pa) at layer interfaces
  real(kind=4), intent(inout) :: x_col                      ! 1E+15 (Peta) molecules /cm2
!!if_off
!-----------------------------------------------------------------------
!  Local variables
!-----------------------------------------------------------------------
!
  logical(kind=4) :: local_dbg
!
! avno      = 0.6022000000000e+24 ! avogadro's num        atoms mol-1
! grav      = .980616e+1          ! m s-2; gravitational acceleration
! mwt_air   = 0.2897000000000e+02 ! mol. wgt. of air  g mol-1
!
  real(kind=4) :: cst_x, x_nmr, dpgm, x_pcol
!
! CODE BEGINS
!
      local_dbg = (.false. .or. global_debug)
      ! local_dbg = (.true.)

! Column X
!
! Col X (molec/cm2) = Y [mole/mole] /mwt_air * avno * 1.E+3 (g/kg) * 1E-4 (m2/cm2)
!
      ! 1E-4 m2/cm2; 1E+3 g/kg => 1E-1
      cst_x = grav /mwt_air * avno * 1.0E+1    ! molec/cm2 

      x_nmr = x_vmr * avno                     ! molecules (x) mole^-1
      dpgm = 1.0E-1*(p_low-p_up)/grav/mwt_air    ! mole (air) cm-2
      x_pcol = 1.0E-15* x_nmr * dpgm           ! 1E+15 (Peta) molecules cm-2
      x_col = x_col + x_pcol                   ! 1E+15 (Peta) molecules cm-2

      !if( x_col == 0. ) then
      !   x_col = cst_x * x_vmr * ( p_up - 0. )
      ! else
      !  x_col = x_col + cst_x * ( p_low - p_up ) * x_vmr
      ! end if

      if (local_dbg) then
         write(chm_lun_out, *) "in mach_strato_xcol: dpgm, vmr, pcol, col=", dpgm, x_vmr, x_pcol, x_col
      end if

return
end subroutine mach_strato_xcol
      

