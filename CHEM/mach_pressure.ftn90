!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------

!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : mach_main.ftn90
! Creation       : H. Landry, S. Gaudreault  , decembre 2010
! Description    : Calculate air density and pressure
! Extra info     :  Density units is in kg/m3
!                   pressure units is millibar
!
! Arguments:
!            IN
!               busvol_size   -> Dimension of busvol
!               metvar{2d,3d} -> local storage (chemistry lib only, see chm_exe) for met. fields 
!                                copied from Physics buses (see chm_load_metvar).
!
!           IN/OUT
!               busvol       -> Volatile bus for chemistry
!
!================================================================================================
!
!!if_on
subroutine mach_pressure(busvol, busvol_size, metvar2d, metvar3d)
   use chm_metvar_mod,       only: SIZE_MV2D, SIZE_MV3D
   use chm_ptopo_grid_mod,   only: chm_ni, chm_nk
!!if_off
   use chm_metvar_mod,       only: MV3D_SIGT, MV2D_PPLUS, MV3D_TPLUS,  MV3D_HUPLUS
   use chm_utils_mod,        only: ik
   use chm_consphychm_mod,   only: rgasd, delta
   use chm_species_info_mod, only: sm
   use chm_species_idx_mod,  only: sp_pressure, sp_density
   implicit none
!!if_on
   integer(kind=4), intent   (in) :: busvol_size
   real(kind=4),    intent(inout) :: busvol  (busvol_size)
   real(kind=4),    intent   (in) :: metvar2d(chm_ni,SIZE_MV2D)
   real(kind=4),    intent   (in) :: metvar3d(chm_ni,chm_nk,SIZE_MV3D)
!!if_off
!
!  Local variables
!
   integer(kind=4)  :: i, k

      do k = 1, chm_nk
         do i = 1, chm_ni
             busvol(sm(sp_pressure) % vol_offset + ik(i, k, chm_ni)) = metvar3d(i, k, MV3D_SIGT) * & 
                                                                       metvar2d(i, MV2D_PPLUS      )
             busvol(sm(sp_density) % vol_offset  + ik(i, k, chm_ni)) = busvol(sm(sp_pressure) % vol_offset + ik(i, k, chm_ni)) /   &
                                                                       (rgasd                                                  *   &
                                                                        metvar3d(i, k, MV3D_TPLUS)                             *   &
                                                                        (1.0 + delta * metvar3d(i, k, MV3D_HUPLUS))   )
         end do
      end do

end subroutine mach_pressure


