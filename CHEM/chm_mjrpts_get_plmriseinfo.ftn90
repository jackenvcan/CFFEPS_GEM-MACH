!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------

!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project  : GEM-MACH
! Fichier/File    : chm_mjrpts_get_plmriseinfo.ftn90
! Creation        : J. Chen - Oct 2016 
! Description     : Retreive hourly plumerise parameters for 
!                   fire mjr-point sources
!
! Extra info      : CALLED by chm_load_emissions.ftn90
!
! Arguments :
!
!          IN
!
!          OUT
!
!==============================================================================
!
!!if_on
subroutine chm_mjrpts_get_plmriseinfo(file_unit, rsmk, zplm, numsrcs, datev, istatus)
!!if_off
   use chm_utils_mod, only: global_debug, chm_lun_out
   implicit  none
!!if_on
   integer(kind=4), intent (in) :: numsrcs
   integer(kind=4), intent (in) :: file_unit
   integer(kind=4), intent (in) :: datev
   real(kind=4),    intent(out) :: rsmk(numsrcs)
   real(kind=4),    intent(out) :: zplm(numsrcs)
   integer(kind=4), intent(out) :: istatus
!!if_off
!
! Local variables
!
   integer(kind=4)   :: i, j0, j1, j2, ier 
   logical(kind=4)   :: local_dbg
!
!  External Functions
!
   integer                         :: fstlir
   external                           fstlir

   local_dbg = ((.false. .or. global_debug) .and. (chm_lun_out > 0))
!
   istatus = 0
   ier = fstlir(rsmk, file_unit, j0, j1, j2, datev, ' ', -1, -1, -1, ' ', 'RSMK')
   if(ier .lt. 0) then
     if ( chm_lun_out > 0) write(chm_lun_out, *) 'ERROR: missing stack info for variable RSMK'
     istatus = min(ier,istatus)
   endif

   ier = fstlir(zplm, file_unit, j0, j1, j2, datev, ' ', -1, -1, -1, ' ', 'ZPLM')
   if(ier .lt. 0) then
     if ( chm_lun_out > 0) write(chm_lun_out, *) 'ERROR: missing stack info for variable ZPLM'
     istatus = min(ier,istatus)
   endif

   if ( local_dbg ) write(chm_lun_out, *) 'Exit from chm_mjrpts_get_plmriseinfo, status code:',istatus
   return
end subroutine chm_mjrpts_get_plmriseinfo

