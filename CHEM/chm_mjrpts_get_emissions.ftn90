!---------------------------------- LICENCE BEGIN -------------------------------
! GEM-MACH - Atmospheric chemistry library for the GEM numerical atmospheric model
! Copyright (C) 2007-2013 - Air Quality Research Division &
!                           National Prediction Operations division
!                           Environnement Canada
! This library is free software; you can redistribute it and/or
! modify it under the terms of the GNU Lesser General Public
! License as published by the Free Software Foundation; either
! version 2.1 of the License, or (at your option) any later version.
!
! This library is distributed in the hope that it will be useful,
! but WITHOUT ANY WARRANTY; without even the implied warranty of
! MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
! Lesser General Public License for more details.
!
! You should have received a copy of the GNU Lesser General Public
! License along with this library; if not, write to the Free Software
! Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
!---------------------------------- LICENCE END ---------------------------------

!============================================================================!
!         Environnement Canada         |        Environment Canada           !
!                                      |                                     !
! - Service meteorologique du Canada   | - Meteorological Service of Canada  !
! - Direction generale des sciences    | - Science and Technology Branch     !
!   et de la technologie               |                                     !
!============================================================================!
!                            http://www.ec.gc.ca                             !
!============================================================================!
!
! Projet/Project : GEM-MACH
! Fichier/File   : chm_mjrpts_get_emissions.ftn90
! Creation       : A. Kallaur, H. Landry, S. Menard - janvier/fevrier 2007
! Description    : Read in the Major point source time dependant emission data.
!                  If model time step = 0 (gem_tstep_num=0), also read in
!                  point source time independant info. (lats, lons, stk height, etc ...)
!
! Extra info     :
!
! Arguments:
!            IN
!              gem_tstep_num   -->  Model step number (since beginning of integration)
!              pe_file         -->  Assembled major point source filename
!
!==============================================================================
!
!!if_on
subroutine chm_mjrpts_get_emissions(file_unit,Fstack_emis,nb_sources,nb_em_species,mj_names,datev,err)
!!if_off
   use chm_utils_mod, only: global_debug, chm_lun_out
   implicit  none
!!if_on
   integer(kind=4),   intent (in) :: file_unit, nb_sources,nb_em_species,datev
   integer(kind=4),   intent(out) :: err
   character(len=4),  intent (in) :: mj_names(nb_em_species)
   real(kind=4),      intent(out) :: Fstack_emis(nb_sources,nb_em_species)
!!if_off
!
! Local variables
!
  integer(kind=4)     :: i, j0, j1, j2
  logical(kind=4)     :: local_dbg
  integer  fstlir
  external fstlir

   local_dbg = (.false. .or. global_debug)

   Fstack_emis = -1.
!
   err = 0
   do i = 1, nb_em_species
      err = min( fstlir(Fstack_emis(1,i), file_unit, j0, j1, j2, datev, ' ', -1, -1, -1, ' ', mj_names(i)), err)
   end do

   if (local_dbg) write(chm_lun_out, *) 'Exit chm_mjrpts_get_emissions'

   return
end subroutine chm_mjrpts_get_emissions

